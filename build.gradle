plugins {
    id "java"
    id "idea"
    id "eclipse"
    id "application"
}


version = "0.0.1"
group = "de.mat2095"
archivesBaseName = "my_slither"
mainClassName = "de.mat2095.my_slither.Main"
//sourceCompatibility = JavaVersion.VERSION_1_8

compileJava {
  options.compilerArgs.addAll(['--release', '8'])
}

repositories {
    mavenCentral()
}

//configurations {
//    natives
//}

dependencies {
    //compile "org.apache.logging.log4j:log4j-api:2.11.2"
    //compile "org.apache.logging.log4j:log4j-core:2.11.2"
    //compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'
	//compile group: 'com.bulenkov', name: 'darcula', version: '2018.2'
	compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.4.0'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
	compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'


}


sourceSets {
	main {
		java {
			srcDirs = ["src"]
		}
	}
}

jar {
    manifest {
        attributes("Main-Class": project.mainClassName)
    }
}

task uberjar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'project',
        'Implementation-Version': project.version,
        'Main-Class': project.mainClassName
    }
    //baseName = project.name + '-all'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude 'META-INF/**.RSA'
                exclude 'META-INF/MANIFEST.MF'
                exclude 'META-INF/log4j-provider.properties'
            } } }
    with jar
}

processResources {
    configurations {
      all*.exclude group: 'log4j', module: 'log4j'
    }
   
    configurations.compile.each {
        from (zipTree(it)) {
            exclude "**/META-INF/"
        }
    }
    
    // native processing will probably change
    //configurations.natives.each {
    //    from (zipTree(it)) {
    //        exclude "**/META-INF/"
    //    }
   // }
}

