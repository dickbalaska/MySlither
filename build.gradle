plugins {
    id "java"
    id "idea"
    id "eclipse"
    id "application"
}


version = "0.0.1"
group = "de.mat2095"
archivesBaseName = "my_slither"
mainClassName = "de.mat2095.my_slither.Main"
sourceCompatibility = JavaVersion.VERSION_1_8

compileJava {
  options.compilerArgs.addAll(['--release', '8'])
}

repositories {
    mavenCentral()
	maven {
		url "http://repo.spring.io/plugins-release/"
	}
}

dependencies {
	compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.4.0'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
	compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'
    compile "com.google.code.gson:gson:1.7.2"
	compile "com.bulenkov:darcula:2018.2"

    //compile fileTree(dir: 'lib', include: '*.jar')

}


sourceSets {
	main {
		java {
			srcDirs = ["src"]
		}
	}
}

jar {
    manifest {
        attributes("Main-Class": project.mainClassName)
    }
}

task uberjar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'project',
        'Implementation-Version': project.version,
        'Main-Class': project.mainClassName
    }
    //baseName = project.name + '-all'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude 'META-INF/**.RSA'
                exclude 'META-INF/MANIFEST.MF'
                exclude 'META-INF/log4j-provider.properties'
            } } }
    with jar
}

processResources {
    configurations {
      all*.exclude group: 'log4j', module: 'log4j'
    }
   
    configurations.compile.each {
        from (zipTree(it)) {
            exclude "**/META-INF/"
        }
    }    
}
